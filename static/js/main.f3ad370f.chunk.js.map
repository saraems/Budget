{"version":3,"sources":["components/landing-page/Header/Header.js","components/landing-page/LandingPage.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","_this","this","react_default","a","createElement","className","onClick","props","handleClickOpen","Component","DialogTitle","withStyles","theme","root","borderBottom","concat","palette","divider","margin","padding","spacing","unit","closeButton","position","right","top","color","grey","children","classes","onClose","DialogTitle_default","disableTypography","Typography_default","variant","IconButton_default","aria-label","Close_default","DialogContent","MuiDialogContent","DialogActions","borderTop","MuiDialogActions","LandingPage","state","open","registerEmail","registerPassword","registerPasswordConfirmation","logInEmail","logInPassword","errorMessage","dialog","setState","handleClose","logIn","e","preventDefault","method","headers","Access-Control-Allow-Origin","body","username","password","fetch","then","res","json","catch","err","console","log","register","includes","length","Content-Type","logInMali","target","value","_this2","react","landing_page_Header_Header","Dialog_default","aria-labelledby","LandingPage_DialogTitle","id","onSubmit","LandingPage_DialogContent","onChange","type","placeholder","LandingPage_DialogActions","Button_default","App","components_landing_page_LandingPage","Boolean","window","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f3ad370f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Header.scss'\n\nclass Header extends Component {\n\n  render() {\n    return (\n            <header>\n                <div className='page_container'>\n                    <div className=\"nav_wrapper\">\n                        <h1>\n                            Your budget. Save for freedom.\n                        </h1>\n                        <nav>\n                            <ul>\n                                <li>\n                                    <a className='btn' onClick={() => this.props.handleClickOpen('RegisterOpen')}>\n                                        <span>Register</span>\n                                    </a>\n                                </li>\n                                <li>\n                                    <a className='btn' onClick={() => this.props.handleClickOpen('LogInOpen')}>\n                                       <span>Log in</span>\n                                    </a>\n                                </li>\n                            </ul>\n                        </nav>\n                    </div>\n                </div>\n            </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component, Fragment } from 'react';\nimport './LandingPage.scss';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nimport Header from './Header/Header'\n\n\nconst DialogTitle = withStyles(theme => ({\n    root: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        margin: 0,\n        padding: theme.spacing.unit * 3,\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing.unit,\n        top: theme.spacing.unit,\n        color: theme.palette.grey[500],\n    },\n}))(props => {\n    const { children, classes, onClose } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles(theme => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing.unit * 3,\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n    root: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        margin: 0,\n        padding: theme.spacing.unit,\n    },\n}))(MuiDialogActions);\n\nclass LandingPage extends Component {\n\n    state = {\n       open: false,\n        registerEmail: '',\n        registerPassword: '',\n        registerPasswordConfirmation: '',\n        logInEmail: '',\n        logInPassword: '',\n        errorMessage: '',\n    };\n\n    handleClickOpen = (dialog) => {\n        this.setState({\n            open: dialog\n        });\n    };\n\n    handleClose = (dialog) => {\n        this.setState({\n            open: dialog,\n            errorMessage: '',\n        });\n    };\n\n    logIn = (e) => {\n        e.preventDefault();\n\n        if (this.state.logInEmail && this.state.logInPassword) {\n\n            const logIn = {\n                method: 'POST',\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                },\n                body: {\n                    username: this.logInEmail,\n                    password: this.state.logInPassword\n                }\n            };\n\n            fetch(`https://budget-app-back-end.herokuapp.com/login`, logIn)\n                .then(res => res.json())\n                .catch(err => console.log(err));\n\n            console.log('logged!', this.state.logInPassword, this.state.logInEmail);\n            this.setState({\n                logInEmail: '',\n                logInPassword: '',\n            });\n        } else {\n            this.setState({\n                errorMessage: '*need login and password in order to log in'\n            })\n        }\n    };\n\n    register = (e) => {\n        e.preventDefault();\n\n        if (this.state.registerEmail.includes('.') && this.state.registerPassword === this.state.registerPasswordConfirmation && this.state.registerEmail.includes('@') && this.state.registerPassword.length > 6) {\n\n            const register = {\n                method: 'POST',\n                headers: {\n                    'Access-Control-Allow-Origin': '*',\n                    'Content-Type': 'application/json'\n                },\n                body: {\n                    username: this.state.registerEmail,\n                    password: this.state.registerPassword\n                }\n            };\n\n            fetch(`https://budget-app-back-end.herokuapp.com/register`, register)\n                .then(res => res.json())\n                .catch(err => console.log(err));\n\n            console.log('registered!', this.state.registerEmail, this.state.registerPassword);\n        }\n\n        if (!this.state.registerEmail.includes('.') || !this.state.registerEmail.includes('@')) {\n            this.setState({\n                errorMessage: '**incorrect e-mail'\n            })\n        }\n\n        if (this.state.registerPassword.length < 6) {\n            this.setState({\n                errorMessage: '**password supposed to have at least 6 characters'\n            })\n        }\n\n        if (this.state.registerPassword !== this.state.registerPasswordConfirmation) {\n            this.setState({\n                errorMessage: '**passwords are different'\n            })\n        }\n    };\n\n    logInMali = (e) => {\n        this.setState({\n            logInEmail: e.target.value\n        })\n    };\n\n    logInPassword = (e) => {\n        this.setState({\n            logInPassword: e.target.value\n        })\n    };\n\n    registerEmail = (e) => {\n        this.setState({\n            registerEmail: e.target.value\n        })\n    };\n\n    registerPassword = (e) => {\n        this.setState({\n            registerPassword: e.target.value\n    })\n    };\n\n    registerPasswordConfirmation = (e) => {\n        this.setState({\n            registerPasswordConfirmation: e.target.value\n        })\n    };\n\n  render() {\n    return (\n        <Fragment>\n            <Header handleClickOpen={ this.handleClickOpen }/>\n            <Dialog\n                            onClose={this.handleClose}\n                            aria-labelledby=\"customized-dialog-title\"\n                            open={this.state.open === 'RegisterOpen'}\n                        >\n                            <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\n                                Registration\n                            </DialogTitle>\n                            <form onSubmit={(e) => this.register(e)}>\n\n                                <DialogContent>\n                                      <input onChange={(e) => this.registerEmail(e)} type='email' placeholder='e-mail'/><br/>\n\n                                    <input onChange={(e) => this.registerPassword(e)} type='password' placeholder='password'/><br/>\n\n                                    <input onChange={(e) => this.registerPasswordConfirmation(e)} type='password' placeholder='confirm password'/>\n                                    <p className='error'> { this.state.errorMessage } </p>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button color=\"secondary\" type=\"submit\" value=\"Submit\">\n                                        Register\n                                    </Button>\n                                </DialogActions>\n\n                            </form>\n                        </Dialog>\n                        <Dialog\n                            onClose={this.handleClose}\n                            aria-labelledby=\"customized-dialog-title\"\n                            open={this.state.open === 'LogInOpen'}\n                        >\n                            <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\n                                LogIn\n                            </DialogTitle>\n                            <form onSubmit={(e) => this.logIn(e)}>\n                                <DialogContent>\n\n                                    <input onChange={(e) => this.logInMali(e)} type='email' placeholder='e-mail'/><br/>\n                                    <input onChange={(e) => this.logInPassword(e)} type='password' placeholder='password'/><br/>\n\n                                    <p className='error'> { this.state.errorMessage } </p>\n\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose} color=\"primary\" type=\"submit\" value=\"Submit\">\n                                        Log In\n                                    </Button>\n                                </DialogActions>\n                            </form>\n\n                        </Dialog>\n            <section className='app_desc'>\n                <div className='page_container'>\n                    <div className=\"app_desc_wrapper\">\n                        <div className=\"app_desc__left\">\n                            <h2>\n                                Application which will allow you to <br/> take control over your private finances\n                            </h2><br/>\n                            <p>\n                                Lorem ipsum dolor sit amet, consectetur adipisicing elit. Blanditiis quam, unde! Ad architecto aspernatur autem cupiditate delectus deleniti distinctio eaque ex hic in, modi molestias odio quam quisquam quo, sequi, sint vero! Aut consequatur cupiditate dolor earum enim esse id ipsa, iure laboriosam laudantium obcaecati omnis porro quaerat quidem similique.\n                            </p><br/>\n                            <button className='square'> Before registration check demo</button>\n                        </div>\n                        <div className=\"app_desc__right\">\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </Fragment>\n    );\n  }\n}\n\nexport default LandingPage;\n\n","import React, { Component } from 'react';\nimport LandingPage from '../landing-page/LandingPage'\n\n\nclass App extends Component {\n  render() {\n    return (\n        <LandingPage/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}